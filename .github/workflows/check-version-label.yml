name: Check Version Label

on:
  workflow_call:
  workflow_dispatch:

env:
  VALID_LABELS: '["major", "minor", "patch"]'

jobs:
  check-label:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Version Label
        run: |
          # Extract labels from the pull request
          LABELS="${{ toJson(github.event.pull_request.labels.*.name) }}"

          echo "PR Labels: $LABELS"
          echo "Valid labels: $VALID_LABELS"

          # Validate that VALID_LABELS is valid JSON (array format)
          VALID_LABELS_JSON=$(echo "$VALID_LABELS" | jq -e .)
          if [ $? -ne 0 ]; then
            echo "Error: VALID_LABELS is not a valid JSON array."
            exit 1
          fi

          # Convert LABELS into a proper JSON array format for jq processing
          LABELS_JSON=$(echo "$LABELS" | jq -c .)

          # Filter for valid labels using jq
          VERSION_LABELS=$(echo "$LABELS_JSON" | jq -r --argjson valid_labels "$VALID_LABELS_JSON" \
            '[.[] | select($valid_labels | index(.))] | join(",")')

          # Count valid labels
          COUNT=$(echo "$VERSION_LABELS" | grep -o ',' | wc -l)
          COUNT=$((COUNT + 1))

          # Ensure exactly one valid label
          if [ "$COUNT" -eq 0 ]; then
            echo "Error: No valid version label found. Please add one of: $VALID_LABELS."
            exit 1
          elif [ "$COUNT" -gt 1 ]; then
            echo "Error: Multiple version labels found: $VERSION_LABELS. Please ensure only one version label is used."
            exit 1
          fi

          echo "Valid version label: $VERSION_LABELS"
